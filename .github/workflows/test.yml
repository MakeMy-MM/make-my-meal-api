name: Execute tests using PHPUnit

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [8.4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          docker run --name phpunit -d \
            -v $(pwd):/var/www/html \
            -w /var/www/html \
            composer:latest \
            bash -c "composer install --ignore-platform-reqs"

      - name: Start PostgreSQL container
        run: |
          docker run --name postgres -e POSTGRES_PASSWORD=root -e POSTGRES_DB=make_my_test -d postgres:13

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker exec postgres pg_isready -U root; do
            echo "Waiting for PostgreSQL to be ready...";
            sleep 3;
          done

      - name: Wait for PHPUnit to be ready
        run: |
          until docker inspect --format '{{.State.Running}}' phpunit | grep -q "true"; do
            echo "Waiting for PHPUnit to be ready...";
            sleep 3;
          done

      - name: Run migrations
        run: |
          docker exec phpunit bash -c "cp .env.example .env && \
                     sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=pgsql/' .env && \
                     sed -i 's/DB_HOST=127.0.0.1/DB_HOST=postgres/' .env && \
                     sed -i 's/DB_PASSWORD=/DB_PASSWORD=root/' .env && \
                     php artisan migrate --force"

      - name: Run tests
        run: |
          docker exec phpunit bash -c "./vendor/bin/phpunit"

      - name: Stop and clean up containers
        if: always()
        run: |
          docker stop postgres phpunit
          docker rm postgres phpunit
